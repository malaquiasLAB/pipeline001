name: Automated Deployment

on:
  push:
    branches:
      - develop
      - main

jobs:
  trigger_multiple_workflows:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Teste aprovacao automatica
      run: | 
            for ROW in $(cat deploy.json | jq -r '.[] | @base64'); do
            _jq() {
              echo ${ROW} | base64 --decode | jq -r ${1}
            }
            
            REPOSITORY=$(_jq '.repository')
            WORKFLOW_FILE=$(_jq '.workflow_file')
            BRANCH=$(_jq '.branch')
            ENVIRONMENT=$(_jq '.environment')
            REPOSITORY_LOG=$(echo $REPOSITORY | awk -F'/' '{print $2}')
            
            # get run_id
            RUN_ID=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/$REPOSITORY/actions/runs?branch=$BRANCH | jq '.workflow_runs| map(select(.status == "waiting" and .head_branch == "'$BRANCH'" and .path == ".github/workflows/'$WORKFLOW_FILE'" ))' | jq .[0] | jq .id)
            
            # get environment_ids
            ENVIRONMENT_ID=$(curl -s -L \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PAT }}" \
            https://api.github.com/repos/$REPOSITORY/environments | \
            jq '.environments| map (select (.name == "'$ENVIRONMENT'"))'| \
            jq .[] | jq .id )
            
            # triger approve deployment
            curl -s -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPOSITORY/actions/runs/$RUN_ID/pending_deployments \
            -d '{"environment_ids":['$ENVIRONMENT_ID'],"state":"approved","comment":"Auto aprovado pelo workflow automatizado!"}' > $REPOSITORY_LOG.log

            LINE_COUNT=$(wc -l < $REPOSITORY_LOG.log)
            if [ $LINE_COUNT -gt 100 ]; then
              echo ":: info ::INFO: Deployment for $REPOSITORY triggered successfully"
            else
              echo ":: error :: WARNING!!! Failed to trigger deployment for $REPOSITORY"
            fi
            
            done
      shell: bash

    # - name: Trigger multiple workflows
    #   run: |
    #        for ROW in $(cat deploy.json | jq -r '.[] | @base64'); do
    #              _jq() {
    #                echo ${ROW} | base64 --decode | jq -r ${1}
    #              }

    #              REPOSITORY=$(_jq '.repository')
    #              WORKFLOW_FILE=$(_jq '.workflow_file')
    #              TAG=$(_jq '.tag')

    #              curl -s -X POST -H "Accept: application/vnd.github.v3+json" \
    #              -H "Authorization: token ${{ secrets.PAT }}" \
    #              https://api.github.com/repos/malaquiasLAB/$REPOSITORY/actions/workflows/$WORKFLOW_FILE/dispatches \
    #              -d '{"ref":"'$TAG'"}' > $REPOSITORY.log

    #              if [ -s $REPOSITORY.log ]; then
    #                echo "WARNIG!!! Failed to trigger workflow $WORKFLOW_FILE for $REPOSITORY"
    #              else
    #                 echo "INFO: Workflow $WORKFLOW_FILE for $REPOSITORY triggered successfully"
    #              fi
    #         done
    #         sleep 60
    #   shell: bash